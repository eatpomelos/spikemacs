;;; Compiled snippets and support files for `rhtml-mode'
;;; Snippet definitions:
;;;
(yas-define-snippets 'rhtml-mode
		     '(("se" "<tr>\n	<td>sendKeys</td>\n	<td>`(car kill-ring)`</td>\n	<td>\\${KEY_TAB}</td>\n</tr>" "Selenium IDE press TAB" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/selenium-sendkeys-tab.yasnippet" nil nil)))


;;; Snippet definitions:
;;;
(yas-define-snippets 'rhtml-mode
		     '(("asho" "ng-show=\"$0\" " "ng-show=\"...\"" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/angular/angular-show.yasnippet" nil nil)
		       ("asel" "<select ng-model=\"$0\" ng-options=\"${1:item} as ${1:$(yas/substr yas-text \"[^ ]*\")}.${2:title} for ${1:$(yas/substr yas-text \"[^ ]*\")} in ${3:items}\"></select>" "<select ng-options=\"...\"></select>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/angular/angular-select.yasnippet" nil nil)
		       ("arep" "ng-repeat=\"i in ${0:items}\" " "ng-repeat=\"...\"" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/angular/angular-repeat.yasnippet" nil nil)
		       ("arad" "<label ng-repeat=\"item in ${1:items}\" for=\"\\{\\{item.${2:id}\\}\\}\">\n  \\{\\{item.${3:text}\\}\\}\n  <input type=\"radio\" ng-model=\"$0\" ng-value=\"item.${2:$(yas/substr yas-text \"[^ ]*\")}\">\n</label>\n" "<input type=\"radio\"> ..." nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/angular/angular-radio.yasnippet" nil nil)
		       ("apat" "ng-pattern=\"/$0/\" " "ng-pattern=\"/.../\"" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/angular/angular-pattern.yasnippet" nil nil)
		       ("amod" "ng-model=\"$0\" " "ng-model=\"...\"" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/angular/angular-model.yasnippet" nil nil)
		       ("a" "\\{\\{ $0 \\}\\}\n" "{{ angular-label }}" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/angular/angular-label.yasnippet" nil nil)
		       ("ainp" "<div class=\"form-group\">\n  <label class=\"control-label\">${2:Credit}</label>\n  <input class=\"form-control\" type=\"text\" ng-model=\"userAccount.${3:credit}\" name=\"${3:$(yas/substr yas-text \"[^ ]*\")}\" ng-pattern=\"/^${4:pattern}\\$/\" >\n  <small ng-show=\"${1:frm}.${3:$(yas/substr yas-text \"[^ ]*\")}.$touched && ${1:$(yas/substr yas-text \"[^ ]*\")}.${3:$(yas/substr yas-text \"[^ ]*\")}.$error.pattern\" class=\"has-error\">Error message</small>\n</div>\n" "<div ng-form=\"frm\"><input type=\"text\" /><span class=\"error\" /></div>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/angular/angular-input.yasnippet" nil nil)
		       ("ainc" "<div ng-include=\"'$0'\"></div>" "ng-include=\"'...'\"" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/angular/angular-include.yasnippet" nil nil)
		       ("aif" "ng-if=\"$0\" " "ng-if=\"...\"" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/angular/angular-if.yasnippet" nil nil)
		       ("script" "<script src='//maps.googleapis.com/maps/api/js?sensor=false'></script>\n<script src=\"https://rawgithub.com/nlaplante/angular-google-maps/master/dist/angular-google-maps.min.js\"></script>\n" "<script src=\"angular-google-map.js\">...</script>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/angular/angular-google-map.yasnippet" nil nil)
		       ("aform" "<div ng-form=\"${1:frm}\">\n  <div class=\"form-group\">\n    <label class=\"control-label\">${2:User name}</label>\n    <input class=\"form-control\" type=\"text\" name=\"${3:userName}\" ng-model=\"${4:userData}.${3:$(yas/substr yas-text \"[^ ]*\")}\" placeholder=\"\" ng-pattern=\"/^[a-zA-Z0-9]+$/\">\n    <small ng-show=\"!${1:$(yas/substr yas-text \"[^ ]*\")}.${3:$(yas/substr yas-text \"[^ ]*\")}.$valid\" class=\"error\">Enter valid ${3:$(my-yas-camelcase-to-downcase (yas/substr yas-text \"[^ ]*\"))}</small>\n  </div>\n</form>" "<form><input ng-pattern><span>error message</span></form>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/angular/angular-form.snippet" nil nil)
		       ("adis" "ng-disabled=\"$0\" " "ng-diabled=\"...\"" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/angular/angular-disabled.yasnippet" nil nil)
		       ("acli" "ng-click=\"$0()\" " "ng-click=\"...\"" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/angular/angular-click.yasnippet" nil nil)
		       ("acla" "ng-class=\"\\{class1:${1:true}, class2:$0\\}\" " "ng-class=\"{...}\"" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/angular/angular-class.yasnippet" nil nil)
		       ("acha" "ng-change=\"$0()\" " "ng-change=\"...\"" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/angular/angular-change.yasnippet" nil nil)))


;;; Snippet definitions:
;;;
(yas-define-snippets 'rhtml-mode
		     '(("ahref" "ui-sref=\"`(car kill-ring)`\" ui-sref-opts=\"{$0}\"\n" "ui-sref=\"...\" ui-sref-optis=\"{}\"" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/angular-ui/angular-ui-router-href.yasnippet" nil nil)
		       ("ahref" "ui-sref=\"`(car kill-ring)`\"\n" "ui-sref=\"...\"" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/angular-ui/angular-ui-router-href-simple.yasnippet" nil nil)))


;;; Snippet definitions:
;;;
(yas-define-snippets 'rhtml-mode
		     '(("css" "<style type=\"text/css\">\n  $0\n</style>" "<style type=\"text/css\">...</style>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/css/css.yasnippet" nil nil)
		       ("css" "<!--[if IE]>\n<style type=\"text/css\">\n  $0\n</style>\n<![endif]-->" "<!-- [if IE]> <style type=\"text/css\">..." nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/css/css-ie.yasnippet" nil nil)
		       ("css" "<link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.1.1/css/bootstrap${1:.min}.css\" />" "<link href=\"bootstrap.css\" />" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/css/css-bootstrap.yasnippet" nil nil)))


;;; Snippet definitions:
;;;
(yas-define-snippets 'rhtml-mode
		     '(("ver" "{% verbatim %}\n  $0\n{% endverbatim %}\n" "{% verbatim %} .. . {% endverbatim %}" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/django/django-verbatim.yasnippet" nil nil)
		       ("ext" "{% extends \"${1:shared/list.html}\" %}\n" "{% extends \"...\" %}" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/django/django-extend.yasnippet" nil nil)
		       ("blo" "{% block content %}\n  $0\n{% endblock %}\n" "{% block content %} .. . {% endblock %}" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/django/django-block.yasnippet" nil nil)
		       ("%" "{% $0 %}\n" "{% ... %}" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/django/django-%.yasnippet" nil nil)))


;;; Snippet definitions:
;;;
(yas-define-snippets 'rhtml-mode
		     '(("select" "<select name=\"${1:some_name}\" id=\"${1:$(yas/substr yas-text \"[^ ]*\")}\">\n<option value=\"${2:value1}\">${2:$(yas/substr yas-text \"[^ ]*\")}</option>\n<option value=\"${3:value2}\">${3:$(yas/substr yas-text \"[^ ]*\")}</option>\n$0\n</select>" "Select Box" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/form/select.yasnippet" nil nil)
		       ("label" "<label class=\"${1:className}\" for=\"${2:domID}\">${3:labelText}</label>\n$0\n" "label" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/form/label.yasnippet" nil nil)
		       ("img" "<img src=\"$1\" alt=\"\" style=\"max-width:${2:32px};max-height:${3:32px};\" />\n" "<img> with max-width and max-height" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/form/img.yasnippet" nil nil)
		       ("form" "<form method=\"${1:post}\" id=\"$2\" action=\"$3\">\n<fieldset><legend>${4:formTitle}</legend>\n<p>\n<label for=\"${5:ctrlid}\">${5:labelText}</label>\n<input id=\"${5:$(yas/substr yas-text \"[^ ]*\")}\" name=\"${5:$(yas/substr yas-text \"[^ ]*\")}\" type=\"text\" />\n</p>\n  $0\n</fieldset>\n</form>\n" "<form><fieldset><p><label><input></p></fieldset></form>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/form/form.yasnippet" nil nil)
		       ("fieldset" "<fieldset class=\"${1:ClassName}\"}>\n<legend>${2:`yas/selected-text`}</legend>\n\n$0\n</fieldset>" "Fieldset" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/form/fieldset.yasnippet" nil nil)
		       ("div" "<div class=\"${1:className}\">\n  $0\n</div>\n" "div" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/form/div.yasnippet" nil nil)
		       ("div" "<div class=\"col-xs-${1:12} col-sm-${1:$(yas/substr yas-text \"[^ ]*\")} col-md-${1:$(yas/substr yas-text \"[^ ]*\")}\">\n  $0\n</div>\n" "<div class=\"col-xs-12 col-sm-12 col-md-12\">...</div>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/form/div-bootstrap.yasnippet" nil nil)
		       ("c" "class=\"$0\" " "class=\"blah\"" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/form/class.yasnippet" nil nil)
		       ("xs" "col-xs-${1:12}$0 col-sm-${1:$(yas/substr yas-text \"[^ ]*\")} col-md-${1:$(yas/substr yas-text \"[^ ]*\")} " "col-xs-12 col-sm-12 col-md-12" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/form/class-bootstrap.yasnippet" nil nil)
		       ("btn" "<button>$1</button>\n" "button" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/form/button.yasnippet" nil nil)
		       ("a" "<a class=\"button\" style=\"font-size:16px;line-height:32px;display:block;text-align:center;background:#383838;\">${1:I'm centered}</a>\n" "<a class=\"button\"></a>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/form/a.button.yasnippet" nil nil)))


;;; Snippet definitions:
;;;
(yas-define-snippets 'rhtml-mode
		     '(("html5" "<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"application-name\" content=\"myApp\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n    <link href=\"<%= htmlWebpackPlugin.options.cssDir %>/bootstrap.min.css\" rel=\"stylesheet\" />\n    <link href=\"<%= htmlWebpackPlugin.options.cssDir %>/font-awesome.min.css\" rel=\"stylesheet\" />\n    <style type=\"text/css\">\n    </style>\n  </head>\n  <body>\n    <div id=\"app\"></div>\n  </body>\n</html>" "html-webpack-plugin index.template.ejs" nil nil
			((yas-indent-line 'fixed))
			"d:/HOME/.emacs.d/snippets/rhtml-mode/html5/html5-webpack.yasnippet" nil nil)
		       ("html5" "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"description\" content=\"\" />\n    <title>${1:mytitle}</title>\n    <style type=\"text/css\"></style>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/modernizr/2.7.1/modernizr.min.js\"></script>\n    <script type=\"text/javascript\">\n      Modernizr.load([{\n        test: Modernizr.mq('only all'),\n        nope: '//cdnjs.cloudflare.com/ajax/libs/respond.js/1.4.2/respond.js'\n      }]);\n    </script>\n  </head>\n  <body>\n    <p>First name: <input data-bind=\"value: firstName\" /></p>\n    <p>Last name: <input data-bind=\"value: lastName\" /></p>\n\n    <p>Full name: <strong data-bind=\"text: fullName\"></strong></p>\n    <p>First name: <strong data-bind=\"text: firstName\">todo</strong></p>\n    <p>Last name: <strong data-bind=\"text: lastName\">todo</strong></p>\n\n    <button data-bind=\"click: capitalizeLastName\">Go caps</button>\n    $0\n\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.0/jquery.min.js\"></script>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/knockout/3.1.0/knockout-min.js\"></script>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/knockout-validation/1.0.2/knockout.validation.min.js\"></script>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/knockout-sortable/0.8.1/knockout-sortable.min.js\"></script>\n    <script type=\"text/javascript\">\n    $(document).ready(function (){\n      // This is a simple *viewmodel* - JavaScript that defines the data and behavior of your UI\n      function AppViewModel() {\n        this.firstName = ko.observable(\"Bert\");\n        this.lastName = ko.observable(\"Bertington\");\n        this.fullName = ko.computed(function() {\n          return this.firstName() + \" \" + this.lastName();  \n        }, this);\n        this.capitalizeLastName = function() {\n          var currentVal = this.lastName();    // Read the current value\n          this.lastName(currentVal.toUpperCase()); // Write back a modified value\n        };\n      }\n      // Activates knockout.js\n      ko.applyBindings(new AppViewModel());\n      console.log(\"jquery is working\");\n    });\n    </script>\n  </body>\n</html>\n" "<html>...<script src=\"knockout.js\"></script></html>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/html5/html5-knockout.yasnippet" nil nil)
		       ("html5" "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"description\" content=\"\" />\n    <title>${1:mytitle}</title>\n    <style type=\"text/css\"></style>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/modernizr/2.7.1/modernizr.min.js\"></script>\n    <script type=\"text/javascript\">\n      Modernizr.load([{\n        test: Modernizr.mq('only all'),\n        nope: '//cdnjs.cloudflare.com/ajax/libs/respond.js/1.4.2/respond.js'\n      }]);\n    </script>\n  </head>\n  <body>\n    $0\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/1.8.2/jquery.js\"></script>\n    <script type=\"text/javascript\">\n      $(document).ready(function (){\n        alert(\"jquery is working\");\n      });\n    </script>\n  </body>\n</html>\n" "<!DOCTYPE html><html>...</html>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/html5/html5-jquery.yasnippet" nil nil)
		       ("foundation" "<!DOCTYPE html>\n<!--[if IE 8]> 				 <html class=\"no-js lt-ie9\" lang=\"en\" > <![endif]-->\n<!--[if gt IE 8]><!--> <html class=\"no-js\" lang=\"en\" > <!--<![endif]-->\n\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width\" />\n  <title>${1:Test foundation.css}</title>\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/modernizr/2.6.2/modernizr.min.js\"></script>\n  <link rel=\"stylesheet\" href=\"http://cdnjs.cloudflare.com/ajax/libs/foundation/4.1.6/css/foundation.css\" />\n</head>\n<body>\n  <script>window.jQuery || document.write('<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/1.8.2/jquery.min.js\"><\\/script>')</script>\n  <script src=\"http://cdnjs.cloudflare.com/ajax/libs/foundation/4.1.6/js/foundation.min.js\"></script>\n  <a href=\"#\" class=\"button success\">Success Button</a>\n  $0\n  <script>\n  $(document).ready(function(){\n    $(document).foundation();\n    //insert code below this line\n  });\n</script>\n</body>\n</html>" "<html>foudation html ...</html>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/html5/html5-foundation.yasnippet" nil nil)
		       ("html5" "<!DOCTYPE html>\n<html ng-app=\"myApp\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"description\" content=\"\" />\n    <title>Angular Sandbox (with Bootstrap)</title>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/angular.js/1.4.5/angular.min.js\"></script>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/angular.js/1.4.5/angular-route.min.js\"></script>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/angular.js/1.4.5/angular-mocks.js\"></script>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/angular-ui-bootstrap/0.12.0/ui-bootstrap-tpls.min.js\"></script>\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.2/css/bootstrap.min.css\" />\n    <style type=\"text/css\">.nav, .pagination, .carousel, .panel-title a { cursor: pointer; } /* angular ui bootstrap hack */</style>\n  </head>\n  <body>\n    <div class=\"container\" ng-controller=\"MainCtrl\">\n      <h1>{{message}}</h1>\n    </div>\n    <div ng-view></div>\n    <script type=\"text/javascript\">\n     angular.module('myApp', ['ui.bootstrap', 'ngRoute', 'ngMockE2E']).config(['$routeProvider', function($routeProvider) {\n       $routeProvider.when('/index', {\n         template: '<div>This is main.html</div><div><button ng-click=\"good()\">Good</button><button ng-click=\"bad()\">Bad</button><button ng-click=\"helloWorld()\">hello world</button></div>',\n         controller: 'MainCtrl'\n       }).otherwise({\n         redirectTo: '/index'\n       });\n     }]).run(function($httpBackend) {\n       // HTTP status: http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\n       // hack $http\n       $httpBackend.whenPOST('MY_POST_URL1').respond(200, {hello:'hello'});\n       $httpBackend.whenPOST('MY_POST_URL2').respond(function(method, url, data, headers){\n         return [400, {bye: 'bye'}, {}];\n       });\n       $httpBackend.whenPOST('MY_POST_URL3').respond(function(method, url, data, headers){\n         return [200, {world: 'world'}, {}];\n       });\n       $httpBackend.whenGET(/^.*/).passThrough();\n     }).controller('MainCtrl', ['$scope', '$http', '$q', function ($scope, $http, $q) {\n       var deferred = $q.defer();\n       $scope.message = 'Hello World';\n\n       $scope.good = function() {\n         console.log('$scope.good called!');\n         var p = $http.post('MY_POST_URL1');\n\n         p.then(function(resp) {\n           console.log('resp=', resp);\n         }).catch(function(reason) {\n           console.log('reason=', reason);\n         });\n       };\n\n       $scope.bad = function() {\n         console.log('$scope.bad called!');\n         var p = $http.post('MY_POST_URL2');\n         p.then(function(resp) {\n           console.log('resp=', resp);\n         }).catch(function(reason) {\n           console.log('reason=', reason);\n         });\n       };\n\n       $scope.helloWorld = function() {\n         console.log('helloWorld called');\n         var p = $http.post('MY_POST_URL1');\n\n         p.then(function(resp) {\n           console.log('resp=', resp);\n           if(resp.data.hello === 'hello') {\n             // often true\n             deferred.reject({hello:'reject'});\n             return deferred.promise; // will jump to catch(...)\n           }\n           return $http.post('MY_POST_URL2');\n         }).then(function(resp){\n           console.log('final resp=', resp);\n         }).catch(function(reason) {\n           console.log('reason=', reason);\n         });\n       };\n     }]);\n    </script>\n  </body>\n</html>" "angular-ui+angular-router+bootstrap+mokcup+promise" nil nil
			((yas-indent-line 'fixed))
			"d:/HOME/.emacs.d/snippets/rhtml-mode/html5/html5-angular.yasnippet" nil nil)
		       ("html5" "<!DOCTYPE html>\n<html ng-app=\"myApp\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"description\" content=\"\" />\n    <title>Angular Sandbox (without Bootstrap)</title>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/angular.js/1.4.5/angular.min.js\"></script>\n    <style type=\"text/css\"></style>\n  </head>\n  <body>\n    <div class=\"container\" ng-controller=\"MainCtrl\">\n      <h1>{{ getMessage() }}</h1>\n      <button ng-click=\"clickMe()\" >Click Me</button>\n    </div>\n    <script type=\"text/javascript\">\n     angular.module('myApp', []).controller('MainCtrl', ['$scope', '$filter', function($scope, $filter) {\n       $0\n       $scope.count = 1;\n       $scope.message = 'Hello World ';\n       $scope.getMessage = function( ) {\n         return $scope.message + $scope.count + ($scope.count>1? ' times':' time');\n       };\n       $scope.clickMe = function() {\n         $scope.count++;\n       };\n     }]);\n    </script>\n  </body>\n</html>" "<html> angular only" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/html5/html5-angular-simple.yasnippet" nil nil)
		       ("html5" "<!DOCTYPE html>\n<html ng-app=\"myApp\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"description\" content=\"\" />\n    <title>Angular Sandbox (with Bootstrap)</title>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/angular.js/1.4.5/angular.min.js\"></script>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/angular-ui-router/0.2.15/angular-ui-router.min.js\"></script>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/angular.js/1.4.5/angular-mocks.js\"></script>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/api-check/7.5.0/api-check.min.js\"></script>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/angular-formly/7.0.1/formly.min.js\"></script>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/angular-ui-bootstrap/0.12.0/ui-bootstrap-tpls.min.js\"></script>\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.2/css/bootstrap.min.css\" />\n    <style type=\"text/css\">.nav, .pagination, .carousel, .panel-title a { cursor: pointer; } /* angular ui bootstrap hack */</style>\n  </head>\n  <body>\n    <div class=\"container\" ng-controller=\"MainCtrl\">\n      <h1>{{message}}</h1>\n    </div>\n    <div ui-view></div>\n    <script type=\"text/javascript\">\n     angular.module('myApp', ['ui.bootstrap', 'ui.router', 'ngMockE2E', 'formly']).config(['$stateProvider', '$urlRouterProvider', function($stateProvider, $urlRouterProvider) {\n       $urlRouterProvider.otherwise(\"/index\");\n       $stateProvider.state('index', {\n         url: \"/index\",\n         template: '<div>This is main.html</div><div><button ng-click=\"good()\">Good</button><button ng-click=\"bad()\">Bad</button><button ng-click=\"helloWorld()\">hello world</button></div><a ui-sref=\"state1.list\">state1.list</a><formly-form model=\"vm.model\" fields=\"vm.fields\" form=\"vm.form\"><button class=\"btn btn-default\" type=\"submit\" ng-disabled=\"vm.form.$invalid\">Submit</button></formly-form>',\n         controller: 'IndexCtrl as vm'\n       }).state('state1', {\n         url: \"/state1\",\n         template: \"<h1>State 1</h1><hr/><a ui-sref='state1.list'>Show List</a><div ui-view></div>\"\n       }).state('state1.list', {\n         url: \"/list\",\n         template:\"<h3>List of State 1 Items</h3><ul><li ng-repeat='item in items'>{{ item }}</li></ul>\",\n         controller: function($scope) {\n           console.log('state1.list.controller called');\n           $scope.items = [\"A\", \"List\", \"Of\", \"Items\"];\n         }\n       });\n     }]).config(function(formlyConfigProvider) {\n       formlyConfigProvider.setType({\n         name: 'checkbox',\n         template:' <div class=\"checkbox\"><label><input type=\"checkbox\" class=\"formly-field-checkbox\" ng-model=\"model[options.key]\">{{to.label}} {{to.required ? \"*\" : \"\"}}</label></div>'\n       });\n\n       formlyConfigProvider.setType({\n         name: 'input',\n         template: '<input class=\"form-control\" ng-model=\"model[options.key]\">'\n       });\n\n     }).run(function($httpBackend) {\n       // HTTP status: http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\n       // hack $http\n       $httpBackend.whenPOST('MY_POST_URL1').respond(200, {hello:'hello'});\n       $httpBackend.whenPOST('MY_POST_URL2').respond(function(method, url, data, headers){\n         return [400, {bye: 'bye'}, {}];\n       });\n       $httpBackend.whenPOST('MY_POST_URL3').respond(function(method, url, data, headers){\n         return [200, {world: 'world'}, {}];\n       });\n       $httpBackend.whenGET(/^.*/).passThrough();\n     }).controller('MainCtrl', ['$scope', '$http', '$q', function ($scope, $http, $q) {\n       console.log('MainCtrl called');\n\n       $scope.message = 'Hello World';\n\n     }]).controller('IndexCtrl', ['$scope', '$http', '$q', function ($scope, $http, $q) {\n       console.log('IndexCtrl called');\n       var vm = this;\n       var deferred = $q.defer();\n       vm.fields = [{\n         key: 'email',\n         type: 'input',\n         templateOptions: {\n           label: 'Email address',\n           placeholder: 'Enter email'\n         }\n       },{\n         key: 'likeit',\n         type: 'checkbox',\n         templateOptions: {\n           label: 'Do you like it?',\n           required: true\n         }\n       }\n       ];\n       $scope.bad = function() {\n         console.log('$scope.bad called!');\n         var p = $http.post('MY_POST_URL2');\n         p.then(function(resp) {\n           console.log('resp=', resp);\n         }).catch(function(reason) {\n           console.log('reason=', reason);\n         });\n       };\n\n       $scope.good = function() {\n         console.log('$scope.good called!');\n         var p = $http.post('MY_POST_URL1');\n         p.then(function(resp) {\n           console.log('resp=', resp);\n         }).catch(function(reason) {\n           console.log('reason=', reason);\n         });\n       };\n\n       $scope.helloWorld = function() {\n         console.log('helloWorld called');\n         var p = $http.post('MY_POST_URL1');\n         p.then(function(resp) {\n           console.log('resp=', resp);\n           if(resp.data.hello === 'hello') {\n             // often true\n             deferred.reject({hello:'reject'});\n             return deferred.promise;\n           }\n           return $http.post('MY_POST_URL2');\n         }).then(function(resp){\n           console.log('final resp=', resp);\n         }).catch(function(reason) {\n           console.log('reason=', reason);\n         });\n       };\n     }]);\n    </script>\n  </body>\n</html>\n" "angularui-formly+angularui-router+bootstrap+mokcup+promise+resolve" nil nil
			((yas-indent-line 'fixed))
			"d:/HOME/.emacs.d/snippets/rhtml-mode/html5/html5-angular-formly.yasnippet" nil nil)
		       ("html5" "<!DOCTYPE html>\n<html ng-app=\"myApp\">\n  <!-- npm install angular angular-ui-router angular-mocks angular angular-formly angular-ui-bootstrap bootstrap -->\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"description\" content=\"\" />\n    <title>Angular Sandbox (with Bootstrap)</title>\n    <script src=\"/${1:node_modules}/angular/angular.min.js\"></script>\n    <script src=\"/${1:$(yas/substr yas-text \"[^ ]*\")}/angular-mocks/angular-mocks.js\"></script>\n    <script src=\"/${1:$(yas/substr yas-text \"[^ ]*\")}/angular-ui-router/release/angular-ui-router.min.js\"></script>\n    <script src=\"/${1:$(yas/substr yas-text \"[^ ]*\")}/api-check/dist/api-check.min.js\"></script>\n    <script src=\"/${1:$(yas/substr yas-text \"[^ ]*\")}/angular-formly/dist/formly.js\"></script>\n    <script src=\"/${1:$(yas/substr yas-text \"[^ ]*\")}/angular-ui-bootstrap/ui-bootstrap-tpls.min.js\"></script>\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"/${1:$(yas/substr yas-text \"[^ ]*\")}/bootstrap/dist/css/bootstrap.min.css\" />\n    <style type=\"text/css\">.nav, .pagination, .carousel, .panel-title a { cursor: pointer; } /* angular ui bootstrap hack */</style>\n  </head>\n  <body>\n    <div class=\"container\" ng-controller=\"MainCtrl\">\n      <h1>{{message}}</h1>\n    </div>\n    <div ui-view></div>\n    <script type=\"text/javascript\">\n     angular.module('myApp', ['ui.bootstrap', 'ui.router', 'ngMockE2E', 'formly']).config(['$stateProvider', '$urlRouterProvider', function($stateProvider, $urlRouterProvider) {\n       $urlRouterProvider.otherwise(\"/index\");\n       $stateProvider.state('index', {\n         url: \"/index\",\n         template: '<div>This is main.html</div><div><button ng-click=\"good()\">Good</button><button ng-click=\"bad()\">Bad</button><button ng-click=\"helloWorld()\">hello world</button></div><a ui-sref=\"state1.list\">state1.list</a><formly-form model=\"vm.model\" fields=\"vm.fields\" form=\"vm.form\"><button class=\"btn btn-default\" type=\"submit\" ng-disabled=\"vm.form.$invalid\">Submit</button></formly-form>',\n         controller: 'IndexCtrl as vm'\n       }).state('state1', {\n         url: \"/state1\",\n         template: \"<h1>State 1</h1><hr/><a ui-sref='state1.list'>Show List</a><div ui-view></div>\"\n       }).state('state1.list', {\n         url: \"/list\",\n         template:\"<h3>List of State 1 Items</h3><ul><li ng-repeat='item in items'>{{ item }}</li></ul>\",\n         controller: function($scope) {\n           console.log('state1.list.controller called');\n           $scope.items = [\"A\", \"List\", \"Of\", \"Items\"];\n         }\n       });\n     }]).config(function(formlyConfigProvider) {\n       formlyConfigProvider.setType({\n         name: 'checkbox',\n         template:' <div class=\"checkbox\"><label><input type=\"checkbox\" class=\"formly-field-checkbox\" ng-model=\"model[options.key]\">{{to.label}} {{to.required ? \"*\" : \"\"}}</label></div>'\n       });\n\n       formlyConfigProvider.setType({\n         name: 'input',\n         template: '<input class=\"form-control\" ng-model=\"model[options.key]\">'\n       });\n\n     }).run(function($httpBackend) {\n       // HTTP status: http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\n       // hack $http\n       $httpBackend.whenPOST('MY_POST_URL1').respond(200, {hello:'hello'});\n       $httpBackend.whenPOST('MY_POST_URL2').respond(function(method, url, data, headers){\n         return [400, {bye: 'bye'}, {}];\n       });\n       $httpBackend.whenPOST('MY_POST_URL3').respond(function(method, url, data, headers){\n         return [200, {world: 'world'}, {}];\n       });\n       $httpBackend.whenGET(/^.*/).passThrough();\n     }).controller('MainCtrl', ['$scope', '$http', '$q', function ($scope, $http, $q) {\n       console.log('MainCtrl called');\n\n       $scope.message = 'Hello World';\n\n     }]).controller('IndexCtrl', ['$scope', '$http', '$q', function ($scope, $http, $q) {\n       console.log('IndexCtrl called');\n       var vm = this;\n       var deferred = $q.defer();\n       vm.fields = [{\n         key: 'email',\n         type: 'input',\n         templateOptions: {\n           label: 'Email address',\n           placeholder: 'Enter email'\n         }\n       },{\n         key: 'likeit',\n         type: 'checkbox',\n         templateOptions: {\n           label: 'Do you like it?',\n           required: true\n         }\n       }\n       ];\n       $scope.bad = function() {\n         console.log('$scope.bad called!');\n         var p = $http.post('MY_POST_URL2');\n         p.then(function(resp) {\n           console.log('resp=', resp);\n         }).catch(function(reason) {\n           console.log('reason=', reason);\n         });\n       };\n\n       $scope.good = function() {\n         console.log('$scope.good called!');\n         var p = $http.post('MY_POST_URL1');\n         p.then(function(resp) {\n           console.log('resp=', resp);\n         }).catch(function(reason) {\n           console.log('reason=', reason);\n         });\n       };\n\n       $scope.helloWorld = function() {\n         console.log('helloWorld called');\n         var p = $http.post('MY_POST_URL1');\n         p.then(function(resp) {\n           console.log('resp=', resp);\n           if(resp.data.hello === 'hello') {\n             // often true\n             deferred.reject({hello:'reject'});\n             return deferred.promise;\n           }\n           return $http.post('MY_POST_URL2');\n         }).then(function(resp){\n           console.log('final resp=', resp);\n         }).catch(function(reason) {\n           console.log('reason=', reason);\n         });\n       };\n     }]);\n    </script>\n  </body>\n</html>" "LOCAL angularui-formly+angularui-router+bootstrap+mokcup+promise+resolve" nil nil
			((yas-indent-line 'fixed))
			"d:/HOME/.emacs.d/snippets/rhtml-mode/html5/html5-angular-formly-local-lib.yasnippet" nil nil)
		       ("html5" "<!DOCTYPE html>\n<html ng-app=\"myApp\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"description\" content=\"\" />\n    <title>Angular Sandbox (with Bootstrap)</title>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/angular.js/1.4.5/angular.min.js\"></script>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/angular-ui-router/0.2.15/angular-ui-router.min.js\"></script>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/angular.js/1.4.5/angular-mocks.js\"></script>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/angular-ui-bootstrap/0.12.0/ui-bootstrap-tpls.min.js\"></script>\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.2/css/bootstrap.min.css\" />\n    <style type=\"text/css\">.nav, .pagination, .carousel, .panel-title a { cursor: pointer; } /* angular ui bootstrap hack */</style>\n  </head>\n  <body>\n    <div class=\"container\" ng-controller=\"MainCtrl\">\n      <h1>{{message}}</h1>\n    </div>\n    <div ui-view></div>\n    <script type=\"text/javascript\">\n     angular.module('myApp', ['ui.bootstrap', 'ui.router', 'ngMockE2E']).config(['$stateProvider', '$urlRouterProvider', function($stateProvider, $urlRouterProvider) {\n       $urlRouterProvider.otherwise(\"/index\");\n\n       $stateProvider.state('index', {\n         url: \"/index\",\n         template: '<div>This is main.html</div><div><button ng-click=\"good()\">Good</button><button ng-click=\"bad()\">Bad</button><button ng-click=\"helloWorld()\">hello world</button></div><a ui-sref=\"state1.list\">state1.list</a>',\n         controller: 'IndexCtrl'\n       }).state('state1', {\n         url: \"/state1\",\n         template: \"<h1>State 1 header</h1><hr/><a ui-sref='state1.list'>Show List</a><hr/><div ui-view></div>\"\n       }).state('state1.list', {\n         url: \"/list\",\n         template:'<h3>List of state1.list Items</h3><ul><li ng-repeat=\"item in items\">{{ item }}</li></ul><button ng-click=\"quit()\">Quit</button><button ng-click=\"next()\">Next</button>',\n         controller: function($scope, $state) {\n           console.log('state1.list.controller called');\n           $scope.items = [\"A\", \"List\", \"Of\", \"Items\"];\n           $scope.next = function() {\n             console.log('$scope.back called! =');\n             $state.go('state1.hello');\n           };\n           $scope.quit = function() {\n             console.log('$scope.home called! =');\n             $state.go('index');\n           };\n         }\n       }).state('state1.hello', {\n         url: \"/hello\",\n         template:'<h3>hello world state1.hello</h3><button ng-click=\"back()\">Back</button><button ng-click=\"home()\">Home</button>',\n         controller: function($scope, $state) {\n           console.log('state1.hello.controller called');\n           $scope.back = function() {\n             console.log('$scope.back called! =');\n             $state.go('state1.list');\n           };\n           $scope.home = function() {\n             console.log('$scope.home called! =');\n             $state.go('index');\n           };\n         }\n       });\n     }]).run(function($httpBackend) {\n       // HTTP status: http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\n       // hack $http\n       $httpBackend.whenPOST('MY_POST_URL1').respond(200, {hello:'hello'});\n       $httpBackend.whenPOST('MY_POST_URL2').respond(function(method, url, data, headers){\n         return [400, {bye: 'bye'}, {}];\n       });\n       $httpBackend.whenPOST('MY_POST_URL3').respond(function(method, url, data, headers){\n         return [200, {world: 'world'}, {}];\n       });\n       $httpBackend.whenGET(/^.*/).passThrough();\n     }).controller('MainCtrl', ['$scope', '$http', '$q', function ($scope, $http, $q) {\n       console.log('MainCtrl called');\n\n       $scope.message = 'Hello World';\n\n     }]).controller('IndexCtrl', ['$scope', '$http', '$q', function ($scope, $http, $q) {\n       console.log('IndexCtrl called');\n\n       var deferred = $q.defer();\n\n       $scope.bad = function() {\n         console.log('$scope.bad called!');\n         var p = $http.post('MY_POST_URL2');\n         p.then(function(resp) {\n           console.log('resp=', resp);\n         }).catch(function(reason) {\n           console.log('reason=', reason);\n         });\n       };\n\n       $scope.good = function() {\n         console.log('$scope.good called!');\n         var p = $http.post('MY_POST_URL1');\n         p.then(function(resp) {\n           console.log('resp=', resp);\n         }).catch(function(reason) {\n           console.log('reason=', reason);\n         });\n       };\n\n       $scope.helloWorld = function() {\n         console.log('helloWorld called');\n         var p = $http.post('MY_POST_URL1');\n         p.then(function(resp) {\n           console.log('resp=', resp);\n           if(resp.data.hello === 'hello') {\n             // often true\n             deferred.reject({hello:'reject'});\n             return deferred.promise;\n           }\n           return $http.post('MY_POST_URL2');\n         }).then(function(resp){\n           console.log('final resp=', resp);\n         }).catch(function(reason) {\n           console.log('reason=', reason);\n         });\n       };\n     }]);\n    </script>\n  </body>\n</html>" "angularui-router+bootstrap+mokcup+promise+resolve" nil nil
			((yas-indent-line 'fixed))
			"d:/HOME/.emacs.d/snippets/rhtml-mode/html5/html5-angular-advanced.yasnippet" nil nil)))


;;; Snippet definitions:
;;;
(yas-define-snippets 'rhtml-mode
		     '(("lo" "<%= debug @${1:object} %>" "<%= debug @object %> (RoR)" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/ror/logobject.yasnippet" nil nil)
		       ("%unless" "<% unless ${cond} -%>\n$0\n<% end -%>\n" "<% unless  ...  -%> $. <% end -%>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/ror/%unless" nil nil)
		       ("%tf" "<%= text_field(\"${object_name} \", \"${method}\"$0) %>" "<%= text_field(\" ... \", \" ... \") %>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/ror/%tf" nil nil)
		       ("%ta" "<%= text_area(\"${object_name}\", \"${method}\"$0) %>\n" "<%= text_area(\" ... \", \" ... \") %>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/ror/%ta" nil nil)
		       ("%rp" "<%= render(:partial => \"${action}\"$0 ) %>" "<%= render(:partial => ... ) %>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/ror/%rp" nil nil)
		       ("%lip" "<%= link_to \"${title}\", ${items}_path %>$0\n" "<%= link_to \" ... \", \"...\"_path %>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/ror/%lip" nil nil)
		       ("%licai" "<%= link_to \"${title}\", :controller => \"${items}\", :action => \"${edit}\", :id => ${@item} %>$0" "<%= link_to \" ... \", :controller => \" ... \", :action => \" ... \", :id =>  ...  %>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/ror/%licai" nil nil)
		       ("%lica" "<%= link_to \"${title}\", :controller => \"${items}\", :action => \"${index}\" %>$0" "<%= link_to \" ... \", :controller => \" ... \", :action => \" ... \" %>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/ror/%lica" nil nil)
		       ("%lic" "<%= link_to \"${title}\", :controller => \"${items}\" %>$0" "<%= link_to \" ... \", :controller => \" ... \" %>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/ror/%lic" nil nil)
		       ("%liai" "<%= link_to \"${title}\", :action => \"${edit}\", :id => ${@item} %>$0" "<%= link_to \" ... \", :action => \" ... \", :id =>  ...  %>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/ror/%liai" nil nil)
		       ("%lia" "<%= link_to \"${title}\", :action => \"${index}\" %>$0" "<%= link_to \" ... \", :action => \" ... \" %>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/ror/%lia" nil nil)
		       ("%ife" "<% if ${1:condition} %>\n  $2\n<% else %>\n  $0\n<% end %>\n" "<% if  ...  %> $. <% else %> <% end %>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/ror/%ife" nil nil)
		       ("%if" "<% if ${1:cond} %>\n  $0\n<% end %>\n" "<% if  ...  %> $. <% end %>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/ror/%if" nil nil)
		       ("%h" "<%=h ${@item} %>\n" "<%=h  ...  %>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/ror/%h" nil nil)
		       ("%ft" "<%= form_tag ${1:url} do %>\n  $0\n  <p class=\"button\"><%= submit_tag %></p>\n<% end %>\n" "<%= form_tag url do %> ... <% end  %>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/ror/%ft" nil nil)
		       ("%fld" "<p>\n  <%= label_tag :$1 %><br />\n  <%= text_field_tag :$1 %>\n</p>\n" "<p><%= label_tag ... %> ... <%= text_field_tag ... %></p>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/ror/%fld" nil nil)
		       ("%ffld" "<p>\n  <%= f.label :$1 %><br />\n  <%= f.text_field :$1 %>\n</p>\n" "<p><%= f.label ... %> ... <%= f.text_field ... %></p>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/ror/%ffld" nil nil)
		       ("%ffe" "<%= form_for @$1 do |f| %>\n  <% if @$1.errors.any? %>\n    <div class=\"error_messages\">\n      <h2>Form is invalid</h2>\n      <ul>\n        <% for message in @$1.errors.full_messages %>\n          <li><%= message %></li>\n        <% end %>\n      </ul>\n    </div>\n  <% end %>\n  $0\n  <p class=\"button\"><%= f.submit %></p>\n<% end %>\n" "<%= form_for @var do |f| ... if @var.errors.only? ... %>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/ror/%ffe" nil nil)
		       ("%ff" "<%= form_for @${1:attribute} ${2: :action => \"${3:create}\"} do |f| %>\n  $0\n  <%= f.submit \"Create\" %>\n<% end %>\n" "<%= form_for ... do |f| %>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/ror/%ff" nil nil)
		       ("%%" "<%=$0 %>\n" "<%=$. %>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/ror/%%" nil nil)
		       ("%" "<%$0 %>\n" "<%$. %>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/ror/%" nil nil)))


;;; Snippet definitions:
;;;
(yas-define-snippets 'rhtml-mode
		     '(("main" "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Package xmlns=\"http://soap.sforce.com/2006/04/metadata\">\n    <types>\n        <members>*</members>\n        <name>ApexClass</name>\n    </types>\n    <types>\n        <members>*</members>\n        <name>CustomObject</name>\n    </types>\n    <types>\n         <members>*</members>\n         <name>AuraDefinitionBundle</name>\n    </types>\n    <version>35.0</version>\n</Package>\n" "salesforce package.xml (project mannifest) for lightning" nil nil
			((yas-indent-line 'fixed))
			"d:/HOME/.emacs.d/snippets/rhtml-mode/salesforce/package-xml.yasnippet" nil nil)))


;;; Snippet definitions:
;;;
(yas-define-snippets 'rhtml-mode
		     '(("script" "<script data-main=\"${1:scripts}/main\" src=\"${1:$(yas-substr yas-text \"[^: ]*\")}/require.js\" type=\"text/javascript\"></script>\n" "<script src=\"require.js\"></script>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/script/script-requirejs.yasnippet" nil nil)
		       ("script" "<script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/knockout/3.1.0/knockout-min.js\"></script>\n<script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/knockout-validation/1.0.2/knockout.validation.min.js\"></script>" "<script src=\"knockout.js\">...</script>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/script/script-knockout.yasnippet" nil nil)
		       ("script" "<script type=\"text/javascript\" src=\"${1://cdnjs.cloudflare.com/ajax/libs/jquery/1.8.2/jquery.js}\"></script>\n" "<script src=\"jquery.js\">...</script>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/script/script-jquery.yasnippet" nil nil)
		       ("script" "<script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/angular.js/1.2.20/angular${1:.min}.js\"></script>" "<script src=\"angular.js\">...</script>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/script/script-angular.js" nil nil)
		       ("script" "<script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/angular-ui-bootstrap/0.11.2/ui-bootstrap-tpls${1:.min}.js\"></script>" "<script src=\"angularui.js\">...</script>" nil nil nil "d:/HOME/.emacs.d/snippets/rhtml-mode/script/script-angular-ui.js" nil nil)))


;;; Snippet definitions:
;;;
(yas-define-snippets 'rhtml-mode
		     '(("ui" "<!DOCTYPE html>\n<html ng-app=\"myApp\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"description\" content=\"\" />\n    <title>Bootstrap sample</title>\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.2/css/bootstrap.min.css\" />\n    <style type=\"text/css\">\n     .timeline {\n       list-style: none;\n       position: relative;\n       padding:0;\n     }\n\n     /* this is the vertical LINE of timeline */\n     .timeline:before {\n       /* top and bottom create a line */\n       top: 0;\n       bottom: 0;\n       position: absolute;\n       content: \" \";\n       width: 1px;\n       background-color: black;\n     }\n\n     .timeline > li {\n       margin-bottom: 20px;\n       position: relative;\n     }\n\n     .timeline > li:before,\n     .timeline > li:after {\n       content: \" \";\n       display: table;\n     }\n\n     .timeline > li:after {\n       clear: both;\n     }\n\n     /* circle attached to the timeline */\n     .timeline > li > .timeline-badge {\n       color: #fff;\n       width: 16px;\n       height: 16px;\n       margin-left: -8px;\n       position: absolute;\n       background-color: #999999;\n       z-index: 100;\n       border-top-right-radius: 50%;\n       border-top-left-radius: 50%;\n       border-bottom-right-radius: 50%;\n       border-bottom-left-radius: 50%;\n     }\n\n     /* align the panel to the circle */\n     .timeline > li > .timeline-panel {\n       margin-left: 32px;\n       float: left;\n       padding: 0;\n     }\n    </style>\n  </head>\n  <body>\n    <div class=\"container\">\n      <div class=\"page-header\">\n        <h1 id=\"timeline\">Timeline</h1>\n      </div>\n      <ul class=\"timeline\">\n        <li>\n          <div class=\"timeline-badge\"></div>\n          <div class=\"timeline-panel\">\n              <p>Mussum ipsum cacilds, vidis litro abertis. Consetis adipiscings elitis.</p>\n          </div>\n        </li>\n        <li>\n          <div class=\"timeline-badge\"></div>\n          <div class=\"timeline-panel\">\n              <p>Mussum ipsum cacilds, vidis litro abertis. Consetis adipiscings elitis. Pra l谩</p>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </body>\n</html>\n" "bootstrap css timeline" nil nil
			((yas-indent-line 'fixed))
			"d:/HOME/.emacs.d/snippets/rhtml-mode/ui-components/ui-bootstrap-timline.yasnippet" nil nil)))


;;; Do not edit! File generated at Tue Mar 16 08:56:57 2021
